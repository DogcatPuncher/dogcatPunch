<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petcation.admin.qna.dao.AdminQnaDAO">
	<!-- 
	<select id="qnaList" parameterType="qvo" resultType="qvo">
		SELECT q_num, q_name, q_title, to_char(q_date, 'YYYY-MM-DD') as q_date
		FROM qna
		ORDER BY q_num desc
	</select>
	 -->
	 
	 <!-- 게시판 리스트 검색 부분 추가 -->
	<!-- <select id="qnaList" parameterType="qvo" resultType="qvo">
		SELECT q_num, q_name, q_title, to_char(q_date, 'YYYY-MM-DD') as q_date, readcnt, q_thumb, q_file,
		(select count(r_num) from spring_reply where q_num = qnalist.q_num) as r_cnt
		FROM qna qnalist
		<where>
			<if test="search=='q_title'">
				<![CDATA[ q_title LIKE '%'|| #{keyword} || '%' ]]>
			</if>
			<if test="search=='q_content'">
				<![CDATA[ q_content LIKE '%'|| #{keyword} || '%' ]]>
			</if>
			<if test="search=='q_name'">
				<![CDATA[ q_name LIKE '%'|| #{keyword} || '%' ]]>
			</if>
		</where>
		ORDER BY q_num DESC
	</select> -->
	 <!-- 게시판 리스트 검색 부분 추가 -->
	<!-- <select id="qnaList" parameterType="qvo" resultType="qvo">
		SELECT user_no, q_num, q_name, q_title, to_char(q_date, 'YYYY-MM-DD') as q_date, readcnt, q_thumb, q_file
		FROM qna qnalist 
		<where>
			<if test="search=='q_title'">
				<![CDATA[ q_title LIKE '%'|| #{keyword} || '%' ]]>
			</if>
			<if test="search=='q_content'">
				<![CDATA[ q_content LIKE '%'|| #{keyword} || '%' ]]>
			</if>
			<if test="search=='q_name'">
				<![CDATA[ q_name LIKE '%'|| #{keyword} || '%' ]]>
			</if>
			<if test="search=='user_no'">
				<![CDATA[ user_no LIKE #{keyword} ]]>
			</if>
		</where>
		ORDER BY q_num DESC
		ORDER BY repRoot asc, repStep asc
	</select> -->
	
	<!-- 게시판 리스트 조회(페이징 처리와 검색 처리)및 댓글 갯수 구하기 -->
 	<select id="qnaList" parameterType="qvo" resultType="qvo">
		<![CDATA[
		SELECT user_no, q_num, q_name, q_title, to_char(q_date, 'YYYY-MM-DD') as q_date, q_thumb, q_file, readcnt,
		(select count(r_num) from qna_reply where q_num = qnalist.q_num) as r_cnt
		FROM (
				SELECT /*+ INDEX_DESC(qna SYS_C0017455) */
					rownum as rnum, q_num, q_name, q_title, q_date, q_thumb, q_file, readcnt, user_no
				FROM qna 
				where ]]>
				<trim prefix="(" suffix=") AND " prefixOverrides="AND">
					<include refid="qnaSearch"></include>
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount}
				) qnalist
			WHERE rnum > (#{pageNum} - 1) * #{amount}
			]]>
	</select>
	
	<sql id="qnaSearch">
		<if test="search=='q_title'">
				<![CDATA[ q_title LIKE '%'|| #{keyword} ||'%' ]]>
			</if>
			<if test="search=='q_content'">
				<![CDATA[ q_content LIKE '%'|| #{keyword} ||'%' ]]>
			</if>
			<if test="search=='q_name'">
				<![CDATA[ q_name LIKE '%'|| #{keyword} ||'%' ]]>
			</if>
			<if test="search=='user_no'">
				<![CDATA[ user_no LIKE #{keyword} ]]>
			</if>
	</sql>
	
	<!-- 전체 레코드 수 조회 -->
	<select id="aQnaListCnt" parameterType="qvo" resultType="int">
		SELECT count(*) FROM qna
		<trim prefix=" where (" suffix=")" >
			<include refid="qnaSearch"></include>
		</trim>
	</select>
	
	<select id="aQnaDetail" parameterType="qvo" resultType="qvo">
		SELECT 
			user_no, q_num, q_name, q_title, q_content,
			TO_CHAR(q_date, 'YYYY-MM-DD HH24:MI:SS') AS q_date, readcnt, q_thumb, q_file
		FROM qna
		WHERE q_num = #{q_num}
	</select>
	
	<delete id="aQnaDelete" parameterType="int">
		DELETE 
		FROM qna
		WHERE q_num = #{q_num}
	</delete>
	
</mapper>