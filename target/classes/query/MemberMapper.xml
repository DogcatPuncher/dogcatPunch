<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petcation.client.join.dao.MemberDAO">
	
  	<insert id="memberJoin" 	parameterType="member">
	    <!-- 
	    <selectKey keyProperty="user_id" resultType="int" order="BEFORE">
	        select to_number(to_char(sysdate,'YYMMDD') || NVL(to_char(max(substr(user_no, 7))), '00'))+1 
			from member 
			where to_char(user_date,'YYYYMDD') = to_char(sysdate,'YYYYMMDD')
	    </selectKey>
	     -->

	    INSERT INTO member (user_no, user_id, user_pw, user_name, user_phone, user_email)
	    VALUES (
	    	member_seq.nextval, 
	    	#{user_id}, 
	    	#{user_pw}, 
	    	#{user_name}, 
	    	#{user_phone}, 
	    	#{user_email})
	</insert>
  	
  	<!-- 아이디 중복검사 -->
  	<select id="idCheck" resultType="int">
  	
  		select count(*) from member where user_id = #{user_id}
  	
  	</select>

  	<!-- 이메일 중복검사 -->
  	<select id="emailCheck" resultType="int">
  	
  		select count(*) from member where user_email = #{user_email}
  	
  	</select>

  	<!-- 핸드폰번호 중복검사 -->
  	<select id="phoneCheck" resultType="int">
  	
  		select count(*) from member where user_phone = #{user_phone}
  	
  	</select>
  	
  	 <!-- 로그인 -->
      <select id="memberLogin" resultType="member">
      
         select user_no, user_id, user_pw, user_name, user_phone, user_email, user_date 
         from 
         	member 
         where 
         	user_id = #{user_id}

      </select>
      
<!-- 	 <select id="findId" resultType="String">
         SELECT NVL((
         		SELECT user_id FROM member
		        WHERE user_name = #{user_name} AND user_phone = #{user_phone}
		        ), '실패') as user_id
		 FROM dual
     </select> -->

  	
  	<!-- 아이디와 폰번호이 DB에 존재하는지 먼저 검사 -->
	<select id="searchPhone" parameterType="member" resultType="member">
		select * from member where user_name = #{user_name} and user_phone = #{user_phone}
	</select>

  	<!-- 아이디와 이메일이 DB에 존재하는지 먼저 검사 -->
	<select id="searchEmail" parameterType="member" resultType="member">
		select * from member where user_id = #{user_id} and user_email = #{user_email}
	</select>
	
    <!-- 임시비밀번호 발급을 위한 업데이트 -->
	<update id="updatePw" parameterType="member">
		update member set user_pw = #{user_pw} where user_id = #{user_id} and user_email = #{user_email}
	</update>

  	<!-- read 맞을까?-->
	<select id="read" parameterType="String" resultType="member">
		select * from member where user_name = #{user_name}
	</select>

	
	
</mapper>